// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: gamesrv.proto

package gamesrv

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageType int32

const (
	MessageType_Position MessageType = 0
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "Position",
	}
	MessageType_value = map[string]int32{
		"Position": 0,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_gamesrv_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_gamesrv_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_gamesrv_proto_rawDescGZIP(), []int{0}
}

type StreamedMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=gameservice.MessageType" json:"type,omitempty"`
	// Types that are assignable to ValuesMessage:
	//	*StreamedMessageRequest_Position
	ValuesMessage isStreamedMessageRequest_ValuesMessage `protobuf_oneof:"values_message"`
}

func (x *StreamedMessageRequest) Reset() {
	*x = StreamedMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamesrv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamedMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamedMessageRequest) ProtoMessage() {}

func (x *StreamedMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamesrv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamedMessageRequest.ProtoReflect.Descriptor instead.
func (*StreamedMessageRequest) Descriptor() ([]byte, []int) {
	return file_gamesrv_proto_rawDescGZIP(), []int{0}
}

func (x *StreamedMessageRequest) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_Position
}

func (m *StreamedMessageRequest) GetValuesMessage() isStreamedMessageRequest_ValuesMessage {
	if m != nil {
		return m.ValuesMessage
	}
	return nil
}

func (x *StreamedMessageRequest) GetPosition() *PlayerPosition {
	if x, ok := x.GetValuesMessage().(*StreamedMessageRequest_Position); ok {
		return x.Position
	}
	return nil
}

type isStreamedMessageRequest_ValuesMessage interface {
	isStreamedMessageRequest_ValuesMessage()
}

type StreamedMessageRequest_Position struct {
	Position *PlayerPosition `protobuf:"bytes,2,opt,name=position,proto3,oneof"`
}

func (*StreamedMessageRequest_Position) isStreamedMessageRequest_ValuesMessage() {}

type StreamedMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=gameservice.MessageType" json:"type,omitempty"`
	// Types that are assignable to ValuesMessage:
	//	*StreamedMessageResponse_Positions
	ValuesMessage isStreamedMessageResponse_ValuesMessage `protobuf_oneof:"values_message"`
}

func (x *StreamedMessageResponse) Reset() {
	*x = StreamedMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamesrv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamedMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamedMessageResponse) ProtoMessage() {}

func (x *StreamedMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gamesrv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamedMessageResponse.ProtoReflect.Descriptor instead.
func (*StreamedMessageResponse) Descriptor() ([]byte, []int) {
	return file_gamesrv_proto_rawDescGZIP(), []int{1}
}

func (x *StreamedMessageResponse) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_Position
}

func (m *StreamedMessageResponse) GetValuesMessage() isStreamedMessageResponse_ValuesMessage {
	if m != nil {
		return m.ValuesMessage
	}
	return nil
}

func (x *StreamedMessageResponse) GetPositions() *PlayerPositionArray {
	if x, ok := x.GetValuesMessage().(*StreamedMessageResponse_Positions); ok {
		return x.Positions
	}
	return nil
}

type isStreamedMessageResponse_ValuesMessage interface {
	isStreamedMessageResponse_ValuesMessage()
}

type StreamedMessageResponse_Positions struct {
	Positions *PlayerPositionArray `protobuf:"bytes,2,opt,name=positions,proto3,oneof"`
}

func (*StreamedMessageResponse_Positions) isStreamedMessageResponse_ValuesMessage() {}

type PlayerPositionArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerPositions []*PlayerPosition `protobuf:"bytes,1,rep,name=playerPositions,proto3" json:"playerPositions,omitempty"`
}

func (x *PlayerPositionArray) Reset() {
	*x = PlayerPositionArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamesrv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPositionArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPositionArray) ProtoMessage() {}

func (x *PlayerPositionArray) ProtoReflect() protoreflect.Message {
	mi := &file_gamesrv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPositionArray.ProtoReflect.Descriptor instead.
func (*PlayerPositionArray) Descriptor() ([]byte, []int) {
	return file_gamesrv_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerPositionArray) GetPlayerPositions() []*PlayerPosition {
	if x != nil {
		return x.PlayerPositions
	}
	return nil
}

type PlayerPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	X    float32 `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y    float32 `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *PlayerPosition) Reset() {
	*x = PlayerPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamesrv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPosition) ProtoMessage() {}

func (x *PlayerPosition) ProtoReflect() protoreflect.Message {
	mi := &file_gamesrv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPosition.ProtoReflect.Descriptor instead.
func (*PlayerPosition) Descriptor() ([]byte, []int) {
	return file_gamesrv_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerPosition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerPosition) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PlayerPosition) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamesrv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gamesrv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_gamesrv_proto_rawDescGZIP(), []int{4}
}

func (x *LoginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamesrv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gamesrv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_gamesrv_proto_rawDescGZIP(), []int{5}
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_gamesrv_proto protoreflect.FileDescriptor

var file_gamesrv_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x72, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x93, 0x01, 0x0a,
	0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x10, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x48, 0x00, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x10,
	0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x5c, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x45, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x40,
	0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79,
	0x22, 0x3e, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x25, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2a, 0x1b, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x00, 0x32, 0x9e, 0x01, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x19, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x28, 0x01, 0x30, 0x01, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x64, 0x61, 0x6c, 0x6d, 0x61, 0x73, 0x73, 0x6f, 0x2f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x72, 0x76, 0x3b, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x72,
	0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gamesrv_proto_rawDescOnce sync.Once
	file_gamesrv_proto_rawDescData = file_gamesrv_proto_rawDesc
)

func file_gamesrv_proto_rawDescGZIP() []byte {
	file_gamesrv_proto_rawDescOnce.Do(func() {
		file_gamesrv_proto_rawDescData = protoimpl.X.CompressGZIP(file_gamesrv_proto_rawDescData)
	})
	return file_gamesrv_proto_rawDescData
}

var file_gamesrv_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gamesrv_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gamesrv_proto_goTypes = []interface{}{
	(MessageType)(0),                // 0: gameservice.MessageType
	(*StreamedMessageRequest)(nil),  // 1: gameservice.StreamedMessageRequest
	(*StreamedMessageResponse)(nil), // 2: gameservice.StreamedMessageResponse
	(*PlayerPositionArray)(nil),     // 3: gameservice.PlayerPositionArray
	(*PlayerPosition)(nil),          // 4: gameservice.PlayerPosition
	(*LoginRequest)(nil),            // 5: gameservice.LoginRequest
	(*LoginResponse)(nil),           // 6: gameservice.LoginResponse
}
var file_gamesrv_proto_depIdxs = []int32{
	0, // 0: gameservice.StreamedMessageRequest.type:type_name -> gameservice.MessageType
	4, // 1: gameservice.StreamedMessageRequest.position:type_name -> gameservice.PlayerPosition
	0, // 2: gameservice.StreamedMessageResponse.type:type_name -> gameservice.MessageType
	3, // 3: gameservice.StreamedMessageResponse.positions:type_name -> gameservice.PlayerPositionArray
	4, // 4: gameservice.PlayerPositionArray.playerPositions:type_name -> gameservice.PlayerPosition
	5, // 5: gameservice.GameService.Login:input_type -> gameservice.LoginRequest
	4, // 6: gameservice.GameService.StreamSync:input_type -> gameservice.PlayerPosition
	6, // 7: gameservice.GameService.Login:output_type -> gameservice.LoginResponse
	3, // 8: gameservice.GameService.StreamSync:output_type -> gameservice.PlayerPositionArray
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gamesrv_proto_init() }
func file_gamesrv_proto_init() {
	if File_gamesrv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gamesrv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamedMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamesrv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamedMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamesrv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPositionArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamesrv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamesrv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamesrv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gamesrv_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*StreamedMessageRequest_Position)(nil),
	}
	file_gamesrv_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*StreamedMessageResponse_Positions)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gamesrv_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gamesrv_proto_goTypes,
		DependencyIndexes: file_gamesrv_proto_depIdxs,
		EnumInfos:         file_gamesrv_proto_enumTypes,
		MessageInfos:      file_gamesrv_proto_msgTypes,
	}.Build()
	File_gamesrv_proto = out.File
	file_gamesrv_proto_rawDesc = nil
	file_gamesrv_proto_goTypes = nil
	file_gamesrv_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GameServiceClient is the client API for GameService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameServiceClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	StreamSync(ctx context.Context, opts ...grpc.CallOption) (GameService_StreamSyncClient, error)
}

type gameServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGameServiceClient(cc grpc.ClientConnInterface) GameServiceClient {
	return &gameServiceClient{cc}
}

func (c *gameServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/gameservice.GameService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServiceClient) StreamSync(ctx context.Context, opts ...grpc.CallOption) (GameService_StreamSyncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GameService_serviceDesc.Streams[0], "/gameservice.GameService/StreamSync", opts...)
	if err != nil {
		return nil, err
	}
	x := &gameServiceStreamSyncClient{stream}
	return x, nil
}

type GameService_StreamSyncClient interface {
	Send(*PlayerPosition) error
	Recv() (*PlayerPositionArray, error)
	grpc.ClientStream
}

type gameServiceStreamSyncClient struct {
	grpc.ClientStream
}

func (x *gameServiceStreamSyncClient) Send(m *PlayerPosition) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gameServiceStreamSyncClient) Recv() (*PlayerPositionArray, error) {
	m := new(PlayerPositionArray)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GameServiceServer is the server API for GameService service.
type GameServiceServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	StreamSync(GameService_StreamSyncServer) error
}

// UnimplementedGameServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGameServiceServer struct {
}

func (*UnimplementedGameServiceServer) Login(context.Context, *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedGameServiceServer) StreamSync(GameService_StreamSyncServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamSync not implemented")
}

func RegisterGameServiceServer(s *grpc.Server, srv GameServiceServer) {
	s.RegisterService(&_GameService_serviceDesc, srv)
}

func _GameService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gameservice.GameService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameService_StreamSync_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameServiceServer).StreamSync(&gameServiceStreamSyncServer{stream})
}

type GameService_StreamSyncServer interface {
	Send(*PlayerPositionArray) error
	Recv() (*PlayerPosition, error)
	grpc.ServerStream
}

type gameServiceStreamSyncServer struct {
	grpc.ServerStream
}

func (x *gameServiceStreamSyncServer) Send(m *PlayerPositionArray) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gameServiceStreamSyncServer) Recv() (*PlayerPosition, error) {
	m := new(PlayerPosition)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gameservice.GameService",
	HandlerType: (*GameServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _GameService_Login_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamSync",
			Handler:       _GameService_StreamSync_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gamesrv.proto",
}
